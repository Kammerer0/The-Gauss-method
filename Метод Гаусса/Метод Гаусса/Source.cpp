//Programs Name : Численные методы. Лабораторная работа 1. Задание 1.
//		*****************************************************
//Project Type	: Console Application
//Project Name	: Реализация метода Гаусса на с++
//File Name	: laba1_Pyatygo_1.1.cpp
//Programmer(s) : Пятыго М.И.
//Created	: 18.09.2023
//Comments	:

// Замечания программиста
/*
1) Думаю, можно реализовать обратный ход метода Гаусса иным способом или с другими значениями i и k,
но у меня не получилось, поэтому я использовал классическую блок-схему, дающуюся в учебниках.
2) Проверка на нулевой элемент (строки 91 - 105) будет работать , если в к-ом столбце только один нулевой элемент.
При двух, идущих подряд, уже не сработает, и я не знаю как это исправить
*/

// Обозначения
/*
	P - порядок матрицы коэффициентов
	arr - Матрица коэффициентов
	b - вектор свободных коэффициентов
	x - вектор неизвестных
	d - коэффициент, на который домножается строка матрицы
	sum - сумма произведений иксов на их коэффициенты
	l - вектор, в который записываются значения строки матрицы
	t - вектор, в который записывается соответствующие значение из вектора свободных коэффициентов
	i, j, k - итерационные коэффициенты
*/

//Подключаемые файлы
#include <iostream>

using namespace std;

////////////////////////////////////////////////////////////////////////////////
///////Основная программа///////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
int main()
{
	setlocale(0, "ru");
	int P;														// порядок матрицы
	float arr[20][20], b[20], x[20], l[20], t[20];				// arr - заданная матрица коэффициентов, b - вектор свободных коэффициентов
	float d, sum;

	cout << "Введите порядок матрицы коэффициентов" << endl;
	cin >> P;

	// Вводим значения матрицы коэффициентов при X с клавиатуры

	cout << "Введите значения коэффициентов матрицы слева направо" << endl;
	for (int i = 0; i < P; i++)
	{
		for (int j = 0; j < P; j++)
		{
			cin >> arr[i][j];
		}
	}
	cout << "\n\n\n";

	// вводим вектор свободных коэффициентов

	cout << "Введите значения вектора свободных коэффициентов b" << endl;

	for (int i = 0; i < P; i++)
	{
		cin >> b[i];
	}
	cout << "\n\n\n";

	/*РАСЧЕТ*/

	cout << "Введенная матрица: \n";				// выводим на кансоль заданную матрицу коэффициентов при х

	for (int i = 0; i < P; i++)
	{
		for (int j = 0; j < P; j++)
		{
			cout << arr[i][j] << "    ";
		}
		cout << "\n";
	}
	cout << "\n\n\n";

	// прямой ход Гаусса

	for (int k = 0; k < P; k++)
	{
		// проверка на нулевой элемент в k-ом столбце

		if (arr[k][k] == 0 and k < P - 1)
		{
			for (int m = 0; m < P; m++)
			{
				l[m] = arr[k][m];								// записывает значения строки с нулевым элементом в другой вектор
			}
			t[k] = b[k];
			for (int j = 0; j < P; j++)
			{
				arr[k][j] = arr[k + 1][j];						// перезаписываем значения строки k строкой k+1
				arr[k + 1][j] = l[j];							// перезаписываем значения строки k+1 строкой k
			}
			b[k] = b[k + 1];									// аналогично меняем местами
			b[k + 1] = t[k];									// значения свободных коэффициентов
		}

		// непосредственно сам прямой ход

		for (int i = k + 1; i < P; i++)
		{
			d = arr[i][k] / arr[k][k];							// коэффициент, на который домножается строка, чтобы другая строка обнулилась
			for (int j = k; j < P; j++)
			{
				arr[i][j] = arr[i][j] - d * arr[k][j];			// вычитание строк
			}
			b[i] = b[i] - d * b[k];								// преобразование вектора свободных коэффициентов
		}
	}

	// выводим преобразованную матрицу

	cout << "Треугольная матрица: \n";
	for (int i = 0; i < P; i++)
	{
		for (int j = 0; j < P; j++)
		{
			cout << arr[i][j] << "    ";
		}
		cout << "\n";
	}
	cout << "\n\n\n";

	// выведем вектор преобразованных свободных коэффициентов

	cout << "Вектор преобразованных свободных коэффициентов" << endl;
	for (int i = 0; i < P; i++)
	{
		cout << b[i] << "    ";
	}
	cout << "\n\n\n";

	// обратный ход

	for (int k = P - 1; k >= 0; k--)
	{
		sum = 0;
		for (int i = k + 1; i < P; i++)
		{
			sum += arr[k][i] * x[i];					// находим сумму произведений коэффициента на найденный в предыдущем ходу x[k]
		}
		if (arr[k][k] != 0)
		{
			x[k] = (b[k] - sum) / arr[k][k];			// находим х[k] по общей формуле
		}
		else
		{
			x[k] = 0;
		}
	}

	// выводим решение СЛАУ

	cout << "Ответ: \n\n\n";

	for (int i = 0; i < P; i++)
	{
		cout << "x" << i + 1 << " =    " << x[i] << endl;
	}
	return 0;
}
// конец файла laba1_Pyatygo_1.1.cpp ///////////////////////////////////////////////////////////////